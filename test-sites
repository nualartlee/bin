#!/usr/bin/env bash

##
# Test web servers
# Assert they respond with HTTP
##

# Get directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
echo
echo "Running from $DIR"

# Get file with sites to test, or use default
default=test-sites.txt
echo
if [ -f "$1" ]; then
    file=$1
    echo "Found specified file"
elif [ -f "$DIR/$1" ]; then
    file=$DIR/$1
    echo "Found specified file locally"
elif [ -f "$DIR/$default" ]; then
    file=$DIR/$default
    echo "Found default file in local directory"
elif [ -f "$default" ]; then
    file=$default
    echo "Found default file"
else
    echo "No files found"
    exit 1
fi

# Return code
return=0

# Test function
curl-test() {
    echo
    #response=$(curl -I $1 2>&1 | egrep -q "HTTP.+(200)|(301)|(302).+")
    #response=$(curl -w "%{http_code}" $1 | egrep -q "(200)|(301)|(302)")
    #response=$(curl -I $1 2>&1 | grep -E '200|301|302')
    response=$(curl -I $1 2>&1 | grep -e 'HTTP')
    result=$?
    echo "Getting $1: $response"
    if [ "$result" -ne "0" ]; then
        echo "FAIL"
        return=1
    else
        echo "OK"
    fi
}

# Test sites
while read -r line;
do
    # Skip if commented with #
    if [[ ${line:0:1} == '#' ]]; then
        echo
        echo "Not testing $line"
        echo "WARNING"
        continue
    else
       curl-test "$line"
    fi
done < "$file"

# Return
echo
echo
if [ "$return" -ne "0" ]; then
    echo "Tests Failed"
    echo
    exit 1
else
    echo "Tests OK"
    echo
    exit 0
fi

